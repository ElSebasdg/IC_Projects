n = 100             # Number of intervals
max_x = 40000.0     # Max X-axis value
min_x = -40000.0    # Min X-axis value
max_y = 100.0        # Max Y-axis value
min_y = 0.0         # Min Y-axis value
width_x = (max_x - min_x) / n  # Interval width for X-axis
width_y = (max_y - min_y) / n  # Interval width for Y-axis

data_file = "mid_histogram.txt"  # Data file name
column_index = 1                # Column index containing your data

# Function used to map a value to the intervals
hist(x, width) = width * floor(x / width) + width / 2.0


set yrange [min_y:max_y]   # Customize Y-axis range
set xrange [min_x:max_x]   # Customize X-axis range

# Count and plot
plot data_file 

Exercice 3, remenber to change variable nBits:
# Set the terminal type to something that can display a histogram (e.g., x11, qt, wxt).
set terminal x11 # You can change this to a different terminal type.

# Specify the title and labels for the plot.
set title "Histogram of Quantized Audio Data"
set xlabel "Quantization Levels"
set ylabel "Frequency"

# Load the data from the "quantized_samples.txt" file and create a histogram.
binwidth = 1
bin(x, width) = width*floor(x/width)
set boxwidth binwidth

# Set the number of bits used for quantization (4 bits).
numBits = 8

# Set the x-axis range to cover the range of quantization levels.
set xrange [-2**(numBits-1)-0.5:2**(numBits-1)-0.5]

# Set the y-axis range to cover both negative and positive frequencies.
set yrange [0:]

# Set the x-tick values to match the quantization levels.
set xtics 1
set xtics scale 0

# Count the frequencies of each quantization level and create a histogram.
hist(x, binwidth) = binwidth*floor(x/binwidth)
plot "quantized_samples.txt" using (hist($1, binwidth)):(1.0) smooth frequency with boxes


